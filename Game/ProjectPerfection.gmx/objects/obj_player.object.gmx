<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>-1</persistent>
  <parentName>obj_entity</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
player_init();



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>isomorphic_set_depth();

entity_dampening();
entity_move_input();
entity_collision();

player_update_shield();

debug_show_string("in0: " + string_array(inventory[0]));
debug_show_string("in1: " + string_array(inventory[1]));
debug_show_string("in2: " + string_array(inventory[2]));
debug_show_string("in3: " + string_array(inventory[3]));
debug_show_string("in4: " + string_array(inventory[4]));

debug_show_string("fps: " + string(fps));

var obj = instance_place(x, y, obj_item);

var data = -1;
if(obj)
{
    data = obj.data;
}

var out = -1;

if(keymap_check(keycode.inv0))
{
    out = inventory_swap(self, 0, data);
    with(obj)
    {
        instance_destroy();
    }
}else if(keymap_check(keycode.inv1))
{
    out = inventory_swap(self, 1, data);
    with(obj)
    {
        instance_destroy();
    }
}else if(keymap_check(keycode.inv2))
{
    out = inventory_swap(self, 2, data);
    with(obj)
    {
        instance_destroy();
    }
}else if(keymap_check(keycode.inv3))
{
    out = inventory_swap(self, 3, data);
    with(obj)
    {
        instance_destroy();
    }
}else if(keymap_check(keycode.inv4))
{
    out = inventory_swap(self, 4, data);
    with(obj)
    {
        instance_destroy();
    }
}

if(out != -1 &amp;&amp; is_array(out))
{
    var item = instance_create(x,y, obj_item);
    item.data = out;
}

if(keymap_check(keycode.fire))
{
    player_fire();
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>player_take_damage();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>room_speed = 60;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ui_draw_inventory();
ui_draw_health();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
var yscale = -1;
if(mouse_x - x)
{
    yscale = 1;
}

if(view_current == 0)
{
    if(mouse_y &lt; y)
    {
        if(is_array(inventory[0]))
        {
            draw_weapon(inventory[0], x, y - 64, 1, yscale, point_direction(x, y, mouse_x, mouse_y), 1);
        }
    }

    draw_self()
    
    if(mouse_y &gt;= y)
    {
        if(is_array(inventory[0]))
        {
            draw_weapon(inventory[0], x, y - 64, 1, yscale, point_direction(x, y, mouse_x, mouse_y), 1);
        }
    }
    
    if(shield_active &amp;&amp; remaining_shield &gt; 0) 
    {
        draw_sprite(spr_shield, 0, x - 32, y - 128);
    }
}

if(debug_mode)
{
    draw_set_color(c_red)
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
