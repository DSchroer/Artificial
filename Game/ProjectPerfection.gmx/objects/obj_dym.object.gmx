<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_dym</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_enemy</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>obj_dym</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>entity_init();
event_inherited();
max_health = 5000;
current_health = 5000;

sm_init("idle");
rock_angle = 0;
rock_dist = 150;
rock_x = 0;
rock_y = 0;

part_num = 21;

stage = 1;

volume_mod = 1.4;

rock = inventory_create_weapon();
rock[weapon_index.modifier] = weapon_modifier.plasma;
rock[weapon_index.damage] = 50;
rock[weapon_index.bullet_sprite_xscale] = 1;
rock[weapon_index.bullet_sprite_yscale] = 1;
rock[weapon_index.bullet_sprite] = spr_azar_rock;
rock[weapon_index.accuracy] = 10;

for(var i = 0; i &lt; part_num; i++)
{
    var inst = instance_create(x, y, obj_dym_part);
    inst.image_xscale = 1;
    inst.image_yscale = 1;
    var angle = ((360 / part_num) * i) + rock_angle;
    inst.x = x + lengthdir_x(rock_dist, angle);
    inst.y = y - 64 + lengthdir_y(rock_dist, angle);
}

phase = false;
volume_mod = 0.75;
ds_list_add(hurt_sounds, snd_dym_hit); 
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>isomorphic_set_depth();

if(!phase &amp;&amp; ui_get_boss_health_percent() &lt; 0.5)
{
    phase = true;
    sfx_play_volume(snd_dym_phase, false, 1.0);
}

var num = instance_number(obj_dym_part)
for(var i = 0; i &lt; num; i++)
{
    var rock = instance_find(obj_dym_part, i);
    var angle = ((360 / num) * i) + rock_angle;
    rock.target_x = x + rock_x + lengthdir_x(rock_dist, angle);
    rock.target_y = y + rock_y - 64 + lengthdir_y(rock_dist, angle);
}

var state = sm_get_state();
if(player_exists())
{
    switch(state)
    {
        case "paused":
            speed = 0;
            break;
        case "idle":
            dym_idle();
            break;
        case "regen":
            dym_regen();
            break;
        case "shoot":
            dym_shoot();
            break;
        case "grab":
            dym_grab();
            break;
        case "expand":
            dym_expand();
            break;
         case "explode":
            dym_explode();
            break;
         case "port":
            dym_port();
            break;
    }
}

entity_collision();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with(obj_dym_part)
{
    instance_destroy();
}

sfx_play_volume(snd_dym_death, false, 1.25);

x = room_width / 2;
y = room_height / 2;

roll_boss_loot(2);
kill_boss(2);
obj_progress.progress++;
if(obj_progress.cube_parts &lt; 2)
{
    var cube = instance_create(x, y, obj_cube);
    cube.sprite_index = spr_cube_piece2;
}
else
{
    instance_create(room_width / 2, room_height / 2 - 192, obj_hub_teleporter);
}
event_inherited();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(instance_exists(damage_from) &amp;&amp; damage_from.object_index != obj_dym_part)
{
    event_inherited();
}else{
    damage = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
