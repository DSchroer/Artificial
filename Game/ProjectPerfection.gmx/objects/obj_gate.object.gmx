<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_gate</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(instance_exists(obj_cgrid))
{
    cgrid_set_collision(id);
}

open = false;
vertical = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(!level_stub_find(obj_player))
{
    var enemies;
    with(obj_player)
    {
        enemies = level_stub_find(obj_enemy);
    }
    if(enemies)
    {
        if(open &amp;&amp; !instance_place(x, y, obj_entity))
        {
            if(instance_exists(obj_cgrid))
            {
                cgrid_set_collision(id);
                open = false;
            }
        }
    }else{
        if(!open)
        {
            if(instance_exists(obj_cgrid))
            {
                cgrid_set_collision(0);
                open = true;
            }
        }
    }
}else{
    if(level_stub_find(obj_enemy))
    {
        if(open &amp;&amp; !instance_place(x, y, obj_entity))
        {
            if(instance_exists(obj_cgrid))
            {
                cgrid_set_collision(id);
                open = false;
            }
        }
    }else{
        if(!open)
        {
            if(instance_exists(obj_cgrid))
            {
                cgrid_set_collision(0);
                open = true;
            }
        }
    }
    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var center = true;
center = center &amp;&amp; collision_point(x - 32, y + 32, obj_gate, false, true)
center = center &amp;&amp; collision_point(x + 96, y + 32, obj_gate, false, true)

var left = true;
left = left &amp;&amp; collision_point(x + 96, y + 32, obj_gate, false, true)
left = left &amp;&amp; collision_point(x + 160, y + 32, obj_gate, false, true)

var right = true;
right = right &amp;&amp; collision_point(x - 32, y + 32, obj_gate, false, true)
right = right &amp;&amp; collision_point(x - 96, y + 32, obj_gate, false, true)

if(collision_point(x + 32, y - 128, obj_gate, false, true))
{
    if(center || left || right)
    {
        alarm[0] = 1;
    }
}


if(center || left || right)
{
    //horizontal
    door_expand_horizontal();
}else
{
    vertical = true;
    door_expand_vertical();
}

isomorphic_set_depth();

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var rotation = 0;

if(!open)
{
    if(vertical)
    {
        draw_sprite_ext(spr_laser_middle, 0, x + 64, y, image_yscale, image_xscale, 270, c_white, 1);
    }else{
        draw_sprite_ext(spr_laser_middle, 0, x, y, image_xscale, image_yscale, 0, c_white, 1);
    }
}

if(vertical)
{
    draw_sprite_ext(spr_laser_left_open, 0, x + 64, y, 1, 1, 270, c_white, 1);
    draw_sprite_ext(spr_laser_right_open, 0, x + 64, y + (image_yscale * 64) - 64, 1, 1, 270, c_white, 1);
}else{
    draw_sprite_ext(spr_laser_left_open, 0, x, y, 1, 1, 0, c_white, 1);
    draw_sprite_ext(spr_laser_right_open, 0, x + (image_xscale * 64) - 64, y, 1, 1, 0, c_white, 1);
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
