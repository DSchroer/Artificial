<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_chest_closed</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_interact_solid</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>triggered = false;
nav = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(!nav)
{
    with(obj_navmesh)
    {
        mp_grid_add_rectangle(nav, other.x - 32, other.y - 32, other.x + 64, other.y + 64);
    }
    nav = true;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(triggered)
{
    exit;
}
triggered = true;
sprite_index = spr_chest_open;

if(instance_exists(obj_progress))
{
    var x_off;
    var y_off;
    var index = 0;
    // 0
    x_off[index] = -1;
    y_off[index] = 0;
    index++;    
    x_off[index] = -1;
    y_off[index] = -1;
    index++;    
    x_off[index] = 1;
    y_off[index] = -1;
    index++;    
    x_off[index] = 0;
    y_off[index] = -1;
    index++;    
    x_off[index] = -1;
    y_off[index] = 1;
    index++;    
    //5
    x_off[index] = 1;
    y_off[index] = 0;
    index++;    
    x_off[index] = -2;
    y_off[index] = 0;
    index++;    
    x_off[index] = 0;
    y_off[index] = 1;
    index++;    
    x_off[index] = 1;
    y_off[index] = 1;
    index++;    
    x_off[index] = 2;
    y_off[index] = 0;
    index++;    
    //10
    x_off[index] = 0;
    y_off[index] = -2;
    index++;    
    x_off[index] = 0;
    y_off[index] = 2;
    index++;    
    x_off[index] = -1;
    y_off[index] = 2;
    index++;    
    x_off[index] = 1;
    y_off[index] = 2;
    index++;    
    x_off[index] = -1;
    y_off[index] = -2;
    index++;    
    //15
    x_off[index] = 1;
    y_off[index] = -2;
    index++;    
    
    
    var items;
    var item_index = 0;    

    // HP
    for(var i = 0; i &lt; 1; i++)
    {
        items[item_index++] = instance_create(x, y, obj_health_can);
    }        
    
    // Component    
    if(random(3) &lt; 1)
    {
        items[item_index++] = instance_create(x, y, obj_component);
    }
    
    // Guns    
    var number_guns = 1;//irandom_range(1);
    for(var i = 0; i &lt; number_guns; i++)
    {
        var gun = instance_create(x, y, obj_item);
        gun.data = inventory_spawn_gun_ext(roll_power(), item_quality.common, 50);
        items[item_index++] = gun;        
    }

    level_drop_item_ext(x, y, items, x_off, y_off);    
    
    sfx_play_volume(snd_door_lock_open, false, 1);
}
event_inherited();

instance_create(x, y, obj_chest_open);
instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var point = level_get_spawn_point();
if(point != noone)
{
   x = point.x;
   y = point.y;
   with(point)
   {
       instance_destroy();
   }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
