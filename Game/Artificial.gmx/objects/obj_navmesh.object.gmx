<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-3</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
var xp = 0;
var yp = 0;
var wp = room_width / 64;
var hp = room_height / 64;

nav_x = xp * 64;
nav_y = yp * 64;

nav = mp_grid_create(nav_x, nav_y, wp * 2, hp * 2, 32, 32);

with(obj_wall)
{
    var door = false;
    if(instance_exists(obj_level))
    {
        if(ds_grid_get(obj_level.door_grid, level_position_x(x), level_position_y(y)) == 1)
        {
            door = true;
        }
    }
    
    if(!door)
    {
        mp_grid_add_rectangle(other.nav, x - 32, y - 32, x + 64, y + 64);
    }
}

with(obj_ai_wall)
{
    mp_grid_add_rectangle(other.nav, x - 32, y - 32, x + 64, y + 64);
    instance_destroy();
}

/*
nav_x = xp * 64;
nav_y = yp * 64;

nav = mp_grid_create(nav_x, nav_y, wp * 2, hp * 2, 32, 32);

var walls = level_stub_find_all(obj_wall);
for(var i = 0; i &lt; array_length_1d(walls); i++)
{
    var wall = walls[i];

    var door = false;
    if(instance_exists(obj_level))
    {
        if(ds_grid_get(obj_level.door_grid, level_position_x(x), level_position_y(y)) == 1)
        {
            door = true;
        }
    }
    
    if(!door)
    {
        mp_grid_add_rectangle(nav, wall.x - 32, wall.y - 32, wall.x + 64, wall.y + 64);
    }
}

walls = level_stub_find_all(obj_ai_wall);
for(var i = 0; i &lt; array_length_1d(walls); i++)
{
    var wall = walls[i];
    mp_grid_add_rectangle(nav, wall.x - 32, wall.y - 32, wall.x + 64, wall.y + 64);
}

with(obj_ai_wall)
{
    instance_destroy();
}*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>mp_grid_destroy(nav);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//mp_grid_draw(nav);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
